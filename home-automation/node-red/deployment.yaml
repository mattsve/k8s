apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
  labels:
    app: node-red
    app.kubernetes.io/name: node-red
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-red
  template:
    metadata:
      labels:
        app: node-red
        app.kubernetes.io/name: node-red 
    spec:
      initContainers:
        - name: init-borg
          image: ghcr.io/mattsve/borgmatic:0.4
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: node-red
              mountPath: /data
            - name: secrets
              mountPath: /root/.ssh
              readOnly: true
          env:
            - name: TZ
              value: Europe/Stockholm
            - name: REPOSITORY
              valueFrom:
                secretKeyRef:
                  name: node-red
                  key: borg-repo
            - name: PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: node-red
                  key: borg-passphrase
          args:
            - restore
            - -r
            - "'$(REPOSITORY)'"
            - -p 
            - "'$(PASSPHRASE)'"
            - -a 
            - node-red
            - /data
        - name: inject-secrets
          image: hairyhenderson/gomplate:v3.8.0-alpine
          volumeMounts:
            - name: backup-templates
              mountPath: /templates
            - name: backup-config
              mountPath: /config
            - name: backup-secrets
              mountPath: /secrets
          env:
            - name: TZ
              value: Europe/Stockholm
          command: ["sh", "-c"]
          args:
            - gomplate -d secrets=/secrets < /templates/crontab.tmpl > /config/crontab
      containers:
        - name: node-red
          image: nodered/node-red:1.2.3
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Europe/Stockholm            
          volumeMounts:
            - name: node-red
              mountPath: /data            
          ports:
            - containerPort: 1880
              name: http
              protocol: TCP
        - name: cron-borg
          image: ghcr.io/mattsve/borgmatic:0.4
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: node-red
              mountPath: /data
            - name: backup-config
              mountPath: /config
            - name: secrets
              mountPath: /root/.ssh
              readOnly: true
          env:
            - name: TZ
              value: Europe/Stockholm
          args:
            - cron
            - /config/crontab
      volumes:
        - name: node-red
          emptyDir: {}
        - name: backup-config
          emptyDir: {}
        - name: backup-templates
          configMap:
            name: node-red-backup-templates        
        - name: secrets
          secret:
            secretName: node-red
            items:
              - key: id_ed25519
                mode: 0600
                path: id_ed25519
              - key: id_ed25519.pub
                mode: 0644
                path: id_ed25519.pub
              - key: known_hosts
                mode: 0644
                path: known_hosts
        - name: backup-secrets
          secret:
            secretName: node-red
            items:
              - key: borg-repo
                mode: 0400
                path: borg-repo
              - key: borg-passphrase
                mode: 0400
                path: borg-passphrase
      nodeSelector:
        conbee: "true"